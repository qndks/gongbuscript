// keyboard shortcuts:
var description = document.getElementById("descriptionContainer");
var categoryContainer = document.getElementById("study_category");
var closeNav = document.getElementById("closenav");
var openNav = document.getElementById("opennav");
var studyNav = document.getElementById("study_nav");
var studyArticle = document.getElementsByTagName("ARTICLE");
var code = document.getElementsByTagName("CODE");
var loader = document.getElementsByClassName('loader')[0];
var listItems = document.getElementsByClassName("headings");
var container = document.getElementById("editUIContainer");
var previewButton = document.getElementById("preview-btn");
var previewFrame = document.getElementById("previewFrameId");
var colorchange = document.getElementsByClassName("study_href");
var descriptions = document.getElementsByClassName('descriptionContainer');
var h3Counter = 0;
var h4Counter = 0;
var h5Counter = 0;
var h6Counter = 0;
var done = false;
var called = false;

function body_resize () {
    // show nav:

    if (closeNav) {
        if (window.innerWidth < 1100 && !called) {
            closeNav.style.display = "none", openNav.style.display = "inline-block", studyNav.style.display = "none"
        } else if (window.innerWidth > 1100) {
            closeNav.style.display = "none", openNav.style.display = "none", studyNav.style.display = "block", studyArticle[0].style.display = "block";
        }
        called = true;
    }
}

body_resize();

window.onresize = body_resize;

// user-settings:
if (!localStorage.getItem('syntaxHighlight')) localStorage.setItem('syntaxHighlight', 'false')
if (!localStorage.getItem('animation')) localStorage.setItem('animation', '0');
if (!localStorage.getItem('skin')) localStorage.setItem('skin', 'gongbu');
if (!localStorage.getItem('fixed')) localStorage.setItem('fixed', 'false');

// remove polyfill:
if (!('remove' in Element.prototype)) {
    Element.prototype.remove = function() {
        if (this.parentNode) {
            this.parentNode.removeChild(this);
        }
    };
}

// math functions:
memo = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155]

function fibonacci(num, memo) {
    if (num > 35) return 'too big';
    memo = memo || []
    if (memo[num]) return memo[num]
    if (num <= 1) return 1;

    return fibonacci(num - 1, memo) + fibonacci(num - 2, memo);
}

function isPrime(num) {
    if (num % 1 !== 0 || 0 === num) return !1;
    var i;
    var s = Math.sqrt(num);
    for (i = 2; i <= s; i++) if (num % i === 0) return !1;
    return 1 !== num;
}
function pi(n) {
    var v = 0;
    if (n > 1e8) return "3.141592....";
    for (i = 1; i <= n; i += 4) v += 1 / i - 1 / (i + 2);
    return 4 * v;
}
function factorial(num) {
    for (var rval = 1, i = 2; i <= num; i++) rval *= i;
    return rval;
}
function getE(num) {
    if (num > 1e4) return Math.E;
    for (var e = 0, i = 0; i < num; i++) e += 1 / factorial(i);
    return e;
}

var g = 7;
var C = [0.99999999999980993, 676.5203681218851, -1259.1392167224028,771.32342877765313, -176.61502916214059, 12.507343278686905, -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7];

function gamma(z) {
    if (z < 0.5) return Math.PI / (Math.sin(Math.PI * z) * gamma(1 - z));
    else {
        z -= 1;

        var x = C[0];
        for (var i = 1; i < g + 2; i++)
        x += C[i] / (z + i);

        var t = z + g + 0.5;
        return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;
    }
}

// parser:
function studyParse(org) {
    var result = org.replace(/(<br>)*\[\[분류:(.*?)\]\]/g, ""), studyCategory = org.match(/\[\[분류:(.*?)\]\]/g), category = "";
    if (studyCategory) for (i = 0; i < studyCategory.length; i++) studyCategory[i] = studyCategory[i].replace(/\[\[분류:(.*?)\]\]/g, '<div id="study-category"><a href="/study/분류:$1" title="분류:$1" class="study_href">$1</a> | </div>'),
    category += studyCategory[i];
    else category = '<div id="study-category"><a class="study_href" title="분류:분류가 안된 문서" href="/study/분류:분류가 안된 문서">분류가 안된 문서</a></div>'
    return {
        cg: category = category.replace(/<\/div><div id="study-category">/g, "").replace(/\| (?=<\/div>)/g, ""),
        desc: result
    };
}

// navigation close-open:
function closenav() {
    studyArticle[0].style.display = "block"
    studyNav.style.display = "none", document.getElementById("opennav").style.display = "inline-block";
    document.getElementById("closenav").style.display = "none";
}
function opennav() {
    studyArticle[0].style.display = "none"
    studyNav.style.display = "flex";
    document.getElementById("closenav").style.display = "inline-block", document.getElementById("opennav").style.display = "none";
}

// edit-UI:
function alterForm() {
    targetForm = document.getElementById("study-form");
    if (document.getElementById('descriptionBefore') && !done) {
        done = true;
        document.getElementById('studyEdit').value = document.getElementById('descriptionBefore').value + document.getElementById('studyEdit').value + document.getElementById('descriptionAfter').value;
    }
    targetForm.action = "/process";
    targetForm.target = "_self";
    targetForm.submit();
    document.getElementById('submit-btn').disabled = 'disabled';
}

targetForm = document.getElementById("study-form");
var textarea = document.getElementById('studyEdit');
var textareadiv = document.getElementById('studyEditDiv');
var diff = document.getElementById("diffFrameId");
var diffbtn = document.getElementById('diffbtn');
var previewbtn = document.getElementById('preview-btn');
var preview = document.getElementById("previewFrameId");
var studyForm = document.getElementById('study-form');

function scrollInto(cname) {
    targetForm.action = "/preview/" + cname;
    targetForm.target = "previewFrame";
    if (previewbtn.value === "미리 보기") {
        previewbtn.value = "원본 보기";
        diffbtn.value = "비교"
        preview.style.visibility = "visible";
        preview.style.display = "block";
        diff.style.display = "none";
        textarea.style.display = "none";
        if (localStorage.getItem('syntaxHighlight') === 'true') textareadiv.style.display = "none";
        studyForm.submit();
    } else {
        previewbtn.value = "미리 보기";
        diffbtn.value = "비교"
        preview.style.visibility = "hidden";
        textarea.style.display = "block";
        if (localStorage.getItem('syntaxHighlight') === 'true') textareadiv.style.display = "block";
        preview.contentDocument.write("");
    }
}

function loadDiff(cname) {
    targetForm.action = "/diff/" + cname;
    targetForm.target = "diffFrame";
    if (diffbtn.value === "비교") {
        diffbtn.value = "원본";
        previewbtn.value = "미리 보기";
        diff.style.display = "block";
        preview.style.display = "none";
        preview.style.visibility = "visible";
        textarea.style.display = "none";
        if (localStorage.getItem('syntaxHighlight') === 'true') textareadiv.style.display = "none";
        studyForm.submit();
    } else {
        diffbtn.value = "비교";
        previewbtn.value = "미리 보기";
        diff.style.display = "none";
        preview.style.display = "block";
        textarea.style.display = "block";
        if (localStorage.getItem('syntaxHighlight') === 'true') textareadiv.style.display = "block";
        diff.contentDocument.write("");
    }
}

// goTop:
function goTop() {
    var counter = 1;
    var scrollorg = document.documentElement.scrollTop;
    var scroll = document.documentElement.scrollTop;
    if (localStorage.animation === '0') document.documentElement.scrollTop = 0, document.body.scrollTop = 0;
    else {
        var id = setInterval(function(){
            if (scroll <= 0) {
                document.documentElement.scrollTop = scroll, document.body.scrollTop = scroll;
                clearInterval(id);
            } else if (scroll <= scrollorg / 2){
                document.documentElement.scrollTop = scroll, document.body.scrollTop = scroll;
                scroll -= 2 * counter;
                counter = counter / 1.1;
            } else {
                document.documentElement.scrollTop = scroll, document.body.scrollTop = scroll;
                scroll -= 2 * counter;
                counter = counter * 1.1;
            }
        }, 10)
    }
}

// date format "xx hours ago" for recent changes:
function formatDate(date) {
    var date = new Date(date.replace(/\s/, 'T')).getTime();
    var now = new Date().getTime();
    var sub = now - date;
    var seconds = sub / 1000
    var minutes = seconds / 60
    var hours = minutes / 60;
    var days = hours / 24;
    var months = days / 30.43;
    var years = months / 12;
    if (years <= 1)
        if (months <= 1)
            if (days <= 1)
                if (hours <= 1)
                    if (minutes <= 1) return Math.round(seconds) + '초 전';
                    else return Math.round(minutes) + '분 전';
                else return Math.round(hours) + '시간 전';
            else return Math.round(days) + '일 전';
        else return Math.round(months) + '달 전';
    else return Math.round(years) + '년 전';
}

// get recent changes:
function getRecentChanges() {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
        if (this.readyState === 4 && this.status === 200) {
            var r = JSON.parse(this.responseText);
            var t = document.querySelectorAll('#recentChangesContainer > li');
            for (var i = 0; i < t.length; i++) {
                var a = t[i].children[0].children[0];
                var p = t[i].children[1];
                if (r[i].isWatching) a.className = 'study_href';
                a.href = '/study/' + r[i].content_name;
                a.title = r[i].content_name;
                a.innerHTML = r[i].content_name;
                p.innerHTML = formatDate(r[i].last_updated);
            }
        }
    }
    xhttp.open("GET", "/recentChanges?ver=" + Date.now(), true);
    xhttp.send();
}

var recentChanges = document.querySelector('#study_nav');
if (recentChanges) {
    getRecentChanges();
    setInterval(getRecentChanges, 1000 * 60 * 5);
}

// popup-menu:
var popup = document.getElementById('links');
var modal = document.getElementById('editmodal');

if (popup) {
    document.body.onclick = function (event) {
        if (event.target.id !== 'links' && event.target.id !== 'apps' && document.getElementById('links').classList.contains("show")){
            document.getElementById("links").classList.toggle("show");
        }
        if (event.target.id !== 'loginContainer' && event.target.id !== 'iosperson' && document.getElementById('loginContainer').classList.contains("show")){
            document.getElementById("loginContainer").classList.toggle("show");
        }
        document.getElementById('livesearch').style.display = 'none';
        if (modal) {
            if (event.target.className !== "mathbtn mathicon" && event.target.className !== "mathbtn" && event.target.className !== "modal-content" && event.target.id !== 'livesearch2' && event.target.id !== 'editsearch' && event.target.className !== "livesearchlist" && !document.getElementById('livesearch2').contains(event.target) && modal.style.display === "block") {
                modal.style.display = "none";
                editSearch.value='';
            }
        }
    }
}

// textarea session: (removed)
var textarea = document.getElementById('studyEdit');

document.getElementsByTagName("body")[0].onkeydown = function(event) {
    var key = event.which || event.keyCode;
    if (textarea) {
        if (event.ctrlKey && event.shiftKey) {
            if (65 === key) return document.getElementById('preview-btn').click();
            if (90 === key) return document.getElementById('categorybtn').click();
            if (70 === key) return document.getElementById('filebtn').click();
            if (88 === key) return document.getElementById('templatebtn').click();
            if (219 === key) return document.getElementById('bracketbtn').click();
            if (188 === key) return document.getElementById('katexbtn').click();
        }
        if (event.ctrlKey) {
            if (219 === key) return document.getElementById('linkbtn').click();
        }
    }
    if (document.getElementsByClassName('preview-article')[0]) {
        return;
    }
    if (!event.ctrlKey && "INPUT" !== event.target.tagName && "TEXTAREA" !== event.target.tagName && "studyEdit" !== event.target.id) {
        if (70 === key) return location.replace("/");
        if (65 === key) return location.replace("/random");
        if (69 === key) return location.replace(location.href.replace(/\/study\/|\/history\/|\/xhref\//g, "/edit/"));
        if (72 === key) return location.replace(location.href.replace(/\/study\/|\/edit\/|\/xhref\//g, "/history/"));
        if (76 === key) return location.replace("/Longest");
        if (83 === key) return location.replace("/Shortest");
        if (88 === key) return location.replace(location.href.replace(/\/edit\/|\/history\/|\/study\//g, "/xhref/"));
    }
}

if (description && categoryContainer) {

    // generate category, parse no-markup area:
    if (categoryContainer.innerHTML = studyParse(description.innerHTML).cg, description.innerHTML = studyParse(description.innerHTML).desc.replace(/&lt;(\/?code)&gt;/g, "<$1>"),
    code) for (var i = 0; i < code.length; i++) code[i].innerHTML = code[i].innerHTML.replace(/&lt;/g, "&lessthan;").replace(/&gt;/g, "&greaterthan;");
    if (description.innerHTML = description.innerHTML.replace(/(&amp;|)&?lt;/g, "<").replace(/(&amp;|)&?gt;/g, ">"),
    code) for (var i = 0; i < code.length; i++) code[i].innerHTML = code[i].innerHTML.replace(/&amp;lessthan;/g, "&lt;").replace(/&amp;greaterthan;/g, "&gt;").replace(/&lt;p class="invisiblebr"&gt;&lt;br&gt;&lt;\/p&gt;/g, "<br>");

    if (document.getElementById('darkcss')) {
        var tds = document.getElementsByTagName('TD');
        for (var i = 0; i < tds.length; i++) {
            var p2 = tds[i].style.backgroundColor.slice(4).slice(0, -1);
            var r = Number(p2.split(', ')[0]), g = Number(p2.split(', ')[1]), b = Number(p2.split(', ')[2]);
            var p3 = (r * 0.299 + g * 0.8 + b * 0.114) > 186 ? 'black' : 'white'
            tds[i].setAttribute('dark', p3);
        }
    }

    // bold link that is title:
    if (colorchange) for (var i = 0; i < colorchange.length; i++) colorchange[i].title === document.querySelector("article > h2 > #title").innerHTML && (colorchange[i].style.fontWeight = "bold");

    // show description, remove loader:
    description.style.display = "block";
    if (loader) loader.remove();

    var event = new CustomEvent("PARSE_FIN");

    document.dispatchEvent(event);
}

if (window.innerWidth > 1100) {
    // link prview like wikipedia
    var linkpreview = document.querySelectorAll('.descriptionContainer .study_href');
    for (var i = 0; i < linkpreview.length; i++) {
        linkpreview[i].setAttribute('summary', linkpreview[i].title)
        linkpreview[i].title = "";
        linkpreview[i].onmouseenter = function (event) {
            if (document.querySelector('.link_preview_tooltip')) return;
            timer = setTimeout(function () {
                var body = document.body
                var html = document.documentElement;
                var topy = html.scrollTop;
                var rect = event.target.getBoundingClientRect();
                var x = (rect.left + rect.right) / 2;
                var y = rect.top + topy;
                var ww = window.innerWidth;
                var wh = window.innerHeight;
                var clienty = event.clientY;
                var rx = ww - x;
                var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
                var by = height - y;
                var tooltip = document.createElement("DIV");
                tooltip.setAttribute('summary', event.target.getAttribute('summary'));
                if (rx > x && clienty < wh - clienty && by > 500) {
                    tooltip.style.left = (x - 30) + 'px';
                    tooltip.style.top = (y + 45) + 'px';
                    tooltip.id = "link_preview_tooltip_left";
                } else if (rx < x && clienty < wh - clienty && by > 500) {
                    tooltip.style.right = (rx - 45) + 'px';
                    tooltip.style.top = (y + 45) + 'px';
                    tooltip.id = "link_preview_tooltip_right";
                } else if (rx > x && (clienty > wh - clienty || by < 500)) {
                    tooltip.style.left = (x - 30) + 'px';
                    tooltip.style.bottom = (by + 25) + 'px';
                    tooltip.id = "link_preview_tooltip_left_flipped";
                } else if (rx < x && (clienty > wh - clienty || by < 500)) {
                    tooltip.style.right = (rx - 45) + 'px';
                    tooltip.style.bottom = (by + 25) + 'px';
                    tooltip.id = "link_preview_tooltip_right_flipped";
                }
                tooltip.onmouseenter = function (event) {
                    if (timer2) clearTimeout(timer2);
                }
                tooltip.onmouseleave = function (event) {
                    setTimeout(function () {
                        event.target.remove();
                    }, 700);
                }
                tooltip.className = "link_preview_tooltip opa0";
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                    if (this.readyState === 4 && this.status === 200) {
                        if (this.responseText !== '404') {
                            var r = JSON.parse(this.responseText);
                            if (r.image !== "") {
                                tooltip.innerHTML = '<div class="previewImg"><img ' + r.image + '></div>'
                            }
                            tooltip.innerHTML += '<div class="previewDiv">' + r.description + '</div>';
                            document.body.appendChild(tooltip);
                            setTimeout(function(){
                                tooltip.classList.toggle('opa0');
                            }, 150)
                        }
                    }
                }
                xhttp.open("GET", "/summary/" + event.target.getAttribute('summary'), true);
                xhttp.send();
            }, 700)
        }

        linkpreview[i].onmouseleave = function (event) {
            if (timer) clearTimeout(timer);
            var tooltip = document.querySelector('.link_preview_tooltip');
            if (tooltip) {
                if (tooltip.getAttribute('summary') === event.target.getAttribute('summary')) {
                    timer2 = setTimeout(function () {
                        tooltip.classList.toggle('opa0');
                        setTimeout(function(){
                            tooltip.remove();
                        }, 150)
                    }, 700)
                }
            }
        }
    }
}

var title = document.getElementById('title');

// header number:
if (listItems[0] && title) {
    var cname = title.innerHTML
    if (listItems.length > 2) {
        var s = "<h2 style='display:inline-block;'>차례</h2>";
        for (var i = 0; i < listItems.length; i++) switch (listItems[i].tagName) {
            case "H3":
                listItems[i].innerHTML = '<a tabindex="0" class="indexanchor study_href" id="h-' + (h3Counter + 1) + '">' + (h3Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h3Counter += 1, h4Counter = 0, h5Counter = 0, h6Counter = 0, s = s + '<br><p style="display:inline-block;" class="list-h3">' + listItems[i].innerHTML + "</p>", listItems[i].innerHTML += '<a class="editsection study_href" href="/edit/' + cname + '?section=' + (h3Counter) + '">[편집]</a>';
                break;
            case "H4":
                listItems[i].innerHTML = '<a tabindex="0" class="indexanchor study_href" id="h-' + h3Counter + "." + (h4Counter + 1) + '">' + h3Counter + "." + (h4Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h4Counter += 1, h5Counter = 0, h6Counter = 0, s = s + '<br><p style="display:inline-block;" class="list-h4">' + listItems[i].innerHTML + "</p>"
                break;
            case "H5":
                listItems[i].innerHTML = '<a tabindex="0" class="indexanchor study_href" id="h-' + h3Counter + "." + h4Counter + "." + (h5Counter + 1) + '">' + h3Counter + "." + h4Counter + "." + (h5Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h5Counter += 1, h6Counter = 0, s = s + '<br><p style="display:inline-block;" class="list-h5">' + listItems[i].innerHTML + "</p>"
                break;
            case "H6":
                listItems[i].innerHTML = '<a tabindex="0" class="indexanchor study_href" id="h-' + h3Counter + "." + h4Counter + "." + h5Counter + "." + (h6Counter + 1) + '">' + h3Counter + "." + h4Counter + "." + h5Counter + "." + (h6Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h6Counter += 1, s = s + '<br><p style="display:inline-block;" class="list-h6">' + listItems[i].innerHTML + "</p>"
                break;
        }
        var newItem = document.createElement("DIV");
        newItem.id = "index";
        newItem.innerHTML = s;
        document.getElementById('descriptionContainer').insertBefore(newItem, listItems[0]);
    } else {
        for (var i = 0; i < listItems.length; i++) switch (listItems[i].tagName) {
            case "H3":
                listItems[i].innerHTML = '<a tabindex="0" class="study_href" id="h-' + (h3Counter + 1) + '">' + (h3Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h3Counter += 1, h4Counter = 0, h5Counter = 0, h6Counter = 0;
                break;
            case "H4":
                listItems[i].innerHTML = '<a tabindex="0" class="study_href" id="h-' + h3Counter + "." + (h4Counter + 1) + '">' + h3Counter + "." + (h4Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h4Counter += 1, h5Counter = 0, h6Counter = 0;
                break;
            case "H5":
                listItems[i].innerHTML = '<a tabindex="0" class="study_href" id="h-' + h3Counter + "." + h4Counter + "." + (h5Counter + 1) + '">' + h3Counter + "." + h4Counter + "." + (h5Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h5Counter += 1, h6Counter = 0;
                break;
            case "H6":
                listItems[i].innerHTML = '<a tabindex="0" class="study_href" id="h-' + h3Counter + "." + h4Counter + "." + h5Counter + "." + (h6Counter + 1) + '">' + h3Counter + "." + h4Counter + "." + h5Counter + "." + (h6Counter + 1) + ". </a>" + listItems[i].innerHTML,
                h6Counter += 1;
                break;
        }
    }
    for (var headingA = document.querySelectorAll('#index p a:first-child'), n = 0; n < headingA.length; n++) headingA[n].href = "#" + headingA[n].id,
    headingA[n].id = "";
}

// footnote:
if (document.getElementsByClassName("study_note")) {
    var study_note = document.getElementsByClassName("study_note"),
    study_note_title = document.getElementsByClassName("study_note_title"),
    study_footnote = document.getElementById("study_footnote");
    for (var i = 0; i < study_note.length; i++) {
        study_note[i].id = "note-" + (i + 1) + "up";
        study_note[i].setAttribute('num', (i+1));
        study_note[i].href="javascript:;";
        study_note[i].setAttribute('tabindex', '0');
        study_note[i].onclick = function (event) {
            var tar = document.getElementById('note-' + Number(event.target.getAttribute('num')));
            tar.focus();
            tar.scrollIntoView();
            if (localStorage.fixed === 'true') {
                document.documentElement.scrollTop -= 75;
            } else {
                document.documentElement.scrollTop -= 25;
            }
        }
        study_footnote.innerHTML = study_footnote.innerHTML + '<p><a class="study_href" tabindex="0" style="cursor:pointer;" onclick="document.getElementById(\'note-' + (i + 1) + 'up\').scrollIntoView(); document.getElementById(\'note-' + (i + 1) + 'up\').focus(); if (localStorage.fixed === \'true\') {document.documentElement.scrollTop -= 75;} else {document.documentElement.scrollTop -= 25;}" id="note-' + (i + 1) + '">[' + (i + 1) + "]</a>&nbsp;" + study_note_title[i].innerHTML + "</p>",
        study_note[i].title = study_note_title[i].innerHTML.replace(/\<(.*?)\>/g, ""), study_note_title[i].innerHTML = "",
        study_note[i].innerHTML = "[" + (i + 1) + "]";
    }
}

// header anchor:
var hashlink = document.querySelectorAll('#index a.indexanchor');
for (var i = 0; i < hashlink.length; i++) {
    if (/#/.test(hashlink[i].href)) {
        hashlink[i].title = hashlink[i].href.split('#')[1];
        hashlink[i].removeAttribute('href');
        hashlink[i].setAttribute('tabindex', "0");
        hashlink[i].onclick = function(event) {
            var href = event.target.title;
            var targetEl = document.getElementById(href);
            targetEl.focus();
            var target = targetEl.offsetTop;
            if (localStorage.fixed === 'true') {
                document.documentElement.scrollTop = target - 25;
                document.body.scrollTop = target  - 25;
                window.scrollTop = target - 25;
            } else {
                document.documentElement.scrollTop = target + 25;
                document.body.scrollTop = target  + 25;
                window.scrollTop = target + 25;
            }
        }
    }

    var ht1 = document.getElementById(hashlink[i].title);
    if (ht1) {
        // remove line breaks under header:
        var pn = ht1.parentNode.nextSibling.innerHTML;
        if (pn === '<br>') pn = '';

        // show-hide description under headers:
        ht1.onclick = function(event) {
            var tar = new RegExp('^' + event.target.innerHTML.replace(/. /g, '\\.'));
            for (var j = 0; j < hashlink.length; j++) {
                var ht2 = document.getElementById(hashlink[j].title);
                // first if for what is clicked, second else if for what is under the clicked:
                if (event.target.innerHTML === ht2.innerHTML) {
                    var displayt = event.target.parentNode.nextSibling;
                    if (displayt.style.display === 'none') {
                        displayt.style.display = "block";
                        event.target.classList.toggle('unfold');
                    } else {
                        displayt.style.display = "none";
                        event.target.classList.toggle('unfold');
                    }
                } else if (tar.test(ht2.innerHTML)) {
                    var display = ht2.parentNode;
                    var displays = display.nextSibling;
                    if (displayt.style.display === 'block') display.style.display = "block", displays.style.display = "block";
                    else display.style.display = "none", displays.style.display = "none";
                }
            }
        }
    }
}


// folding:
var studyFold = document.getElementsByClassName("study_folding");
for (var i = 0; i < studyFold.length; i++) {
    studyFold[i].onclick = function(event) {
        if (event.target.tagName === 'DT'){
            var display = event.target.nextSibling;
            if (display.style.display === 'none') display.style.display = "block";
            else display.style.display = "none";
        }
    }
}
